apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nanumsa-socket-server-ingress
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    cert-manager.io/acme-challenge-issuer: "letsencrypt-production"
    kubernetes.io/ingress.class: nginx
    
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    # ws config
    nginx.ingress.kubernetes.io/websocket-services: nanumsa-socket-server
    nginx.org/websocket-services: nanumsa-socket-server
    nginx.ingress.kubernetes.io/proxy-send-timeout: 60s
    nginx.ingress.kubernetes.io/proxy-read-timeout: 60ss
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 5s
    nginx.ingress.kubernetes.io/proxy-body-size: 20m
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "64k"
    nginx.ingress.kubernetes.io/proxy-busy-buffers-size: "64k"
    nginx.ingress.kubernetes.io/keep-alive: "on"
    nginx.ingress.kubernetes.io/keep-alive-timeout: "75s"
    nginx.ingress.kubernetes.io/keep-alive-requests: "100"
    # ws config end
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_pass_header Content-Type;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
spec:
  ingressClassName: nginx
  tls: 
  - hosts: 
    - www.nanumsa.com
    secretName: tls-secret-socket-server
  rules:
  - host: www.nanumsa.com
    http:
      paths:
        - path: /socket/(.*)
          pathType: ImplementationSpecific
          backend:
            service:
              name: nanumsa-socket-server-service
              port:
                number: 3000
        - path: /socket.io/(.*)
          pathType: ImplementationSpecific
          backend:
            service:
              name: nanumsa-socket-server-service
              port:
                number: 3000
